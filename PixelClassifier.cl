/*
OpenCL RandomForestClassifier
classifier_class_name = PixelClassifier
feature_specification = gaussian_blur=1 difference_of_gaussian=1 laplace_box_of_gaussian_blur=1 sobel_of_gaussian_blur=1
num_ground_truth_dimensions = 2
num_classes = 1
num_features = 4
max_depth = 7
num_trees = 100
feature_importances = 0.0,0.0,0.0,0.0
apoc_version = 0.12.0
*/
__kernel void predict (IMAGE_in0_TYPE in0, IMAGE_in1_TYPE in1, IMAGE_in2_TYPE in2, IMAGE_in3_TYPE in3, IMAGE_out_TYPE out) {
 sampler_t sampler = CLK_NORMALIZED_COORDS_FALSE | CLK_ADDRESS_CLAMP_TO_EDGE | CLK_FILTER_NEAREST;
 const int x = get_global_id(0);
 const int y = get_global_id(1);
 const int z = get_global_id(2);
 float i0 = READ_IMAGE(in0, sampler, POS_in0_INSTANCE(x,y,z,0)).x;
 float i1 = READ_IMAGE(in1, sampler, POS_in1_INSTANCE(x,y,z,0)).x;
 float i2 = READ_IMAGE(in2, sampler, POS_in2_INSTANCE(x,y,z,0)).x;
 float i3 = READ_IMAGE(in3, sampler, POS_in3_INSTANCE(x,y,z,0)).x;
 float s0=0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
s0+=1.0;
 float max_s=s0;
 int cls=1;
 WRITE_IMAGE (out, POS_out_INSTANCE(x,y,z,0), cls);
}
